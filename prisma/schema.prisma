generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"

    url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Conversation {
    id        String    @id @default(cuid())
    messages  Message[]
    member    User      @relation("member", fields: [memberId], references: [id])
    memberId  String
    creator   User      @relation("creator", fields: [creatorId], references: [id])
    creatorId String
    createdAt DateTime  @default(now())
}

model Message {
    id String @id @default(cuid())

    images String[]
    text   String?

    sender   User   @relation("sender", fields: [senderId], references: [id])
    senderId String

    views User[] @relation("views")

    createdAt DateTime @default(now())

    conversation   Conversation @relation(fields: [conversationId], references: [id])
    conversationId String
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    username      String?   @unique
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    password      String?
    accounts      Account[]
    sessions      Session[]

    conversations        Conversation[] @relation("member")
    createdConversations Conversation[] @relation("creator")

    messages       Message[] @relation("sender")
    viewedMessages Message[] @relation("views")
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
